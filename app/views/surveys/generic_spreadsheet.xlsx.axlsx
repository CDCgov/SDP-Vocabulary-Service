@wb = xlsx_package.workbook
@tag_tables = []

def add_section_to_sheet(s, sheet, section_sheet)
  add_section_metadata(s, section_sheet)
  sheet.add_row ["START: #{s.name}"]
  s.section_nested_items.each do |sni|
    add_section_to_sheet(sni.nested_section, sheet, section_sheet) if sni.nested_section
    add_question_to_sheet(sni, sheet) if sni.question
  end
  sheet.add_row ["END: #{s.name}"]
end

def add_section_metadata(s, section_sheet)
  section_row = []
  section_row << (s.name || '')
  section_row << (s.description || '')
  section_row << (s.tag_list.count > 0 ? s.tag_list.join('; ') : '')
  section_row << (s.concepts.count == 1 ? s.concepts.first.display_name : '')
  section_row << (s.concepts.count == 1 ? s.concepts.first.value : '')
  section_row << (s.concepts.count == 1 ? s.concepts.first.code_system : '')
  section_row << tag_tab_name(s)
  section_row << (s.created_at || '')
  section_row << (s.created_by ? s.created_by.email : '')
  section_row << (s.version_independent_id || '')
  section_row << (s.version || '')
  section_row << (s.status || '')
  section_sheet.add_row section_row
end

def add_question_to_sheet(sni, sheet)
  q = sni.question
  new_row = []
  new_row << (q.content || '')
  new_row << (q.description || '')
  new_row << (q.response_type ? q.response_type.name : '')
  new_row << (q.other_allowed ? 'Yes' : '')
  new_row << (sni.response_set ? sni.response_set.name : '')
  new_row << (sni.response_set ? "RS #{sni.response_set.id}" : '')
  new_row << (q.category ? q.category.name : '')
  new_row << (q.subcategory ? q.subcategory.name : '')
  new_row << (q.data_collection_methods && q.data_collection_methods.first ? q.data_collection_methods.first : '')
  new_row << (q.content_stage || '')
  new_row << (q.tag_list.count > 0 ? q.tag_list.join('; ') : '')
  new_row << (sni.program_var || '')
  new_row << (q.concepts.count == 1 ? q.concepts.first.display_name : '')
  new_row << (q.concepts.count == 1 ? q.concepts.first.value : '')
  new_row << (q.concepts.count == 1 ? q.concepts.first.code_system : '')
  new_row << tag_tab_name(q)
  new_row << (q.created_by ? q.created_by.email : '')
  new_row << (q.version_independent_id || '')
  new_row << (q.version || '1')
  new_row << (q.status || '')
  new_row << (q.created_at.to_s || '')
  new_row << surveillance_system_names(q)
  new_row << surveillance_program_names(q)
  new_row << (q.oid || '')
  sheet.add_row new_row
end

def add_tag_tab(tag_array, index)
  @wb.add_worksheet(name: "CSM #{index+1}") do |sheet|
    sheet.add_row ['Concept Name (R)', 'Concept Identifier (R)', 'Code System Identifier (R)']
    tag_array.each do |tag|
      sheet.add_row [tag[:display_name], tag[:value], tag[:code_system]]
    end
  end
end

def tag_tab_name(obj)
  if obj.concepts.length > 1
    tag_array = []
    obj.concepts.each { |tag| tag_array << {display_name: tag.display_name, value: tag.value, code_system: tag.code_system} }
    if @tag_tables.include?(tag_array)
      "CSM #{@tag_tables.index(tag_array)+1}"
    else
      @tag_tables << tag_array
      "CSM #{@tag_tables.length}"
    end
  else
    ''
  end
end

def surveillance_system_names(q)
  system_names = ''
  if q.surveillance_systems.length > 0
    q.surveillance_systems.each {|ss| system_names << ss.name + ','}
    system_names.chomp(',')
  else
    system_names = ''
  end
  system_names
end

def surveillance_program_names(q)
  program_names = ''
  if q.surveillance_programs.length > 0
    q.surveillance_programs.each {|sp| program_names << sp.name + ','}
    program_names.chomp(',')
  else
    program_names = ''
  end
  program_names
end

@wb.add_worksheet(name: 'Survey Questions') do |sheet|
  sheet.add_row ['Question Text (R)','Question Description (R)','Question Response Type (R)','Other Allowed? (O)','Response Set Name (I)','Local Response Set Table (C)','Question Category (O)','Question Subcategory (O)','Question Data Collection Method (O)','Question Content Stage (O)','Question Keyword Tags (O)','Program Defined Variable Name (O)','Concept Name (C)','Concept Identifier (C)','Code System Identifier (C)','Code System Mappings Table (O)','Author (I)','SDP-V ID (I)','Version (I)','Workflow Status (I)','Creation Date (I)','Surveillance Systems (I)','Surveillance Programs (I)','OID (I)']
  @wb.add_worksheet(name: 'Survey Metadata') do |survey_sheet|
    survey_sheet.add_row ['Survey Name (R)','Survey Description (O)','Survey Keyword Tags (O)','Concept Name (C)','Concept Identifier (C)','Code System Identifier (C)','Code System Mappings Table (O)','Creation Date (I)','Author (I)','SDP-V ID (I)','Version (I)','Workflow Status (I)','OMB Approval Number (I)','Surveillance Program (I)','Surveillance System (I)']
    survey_row = []
    survey_row << (@survey.name || '')
    survey_row << (@survey.description || '')
    survey_row << (@survey.tag_list.count > 0 ? @survey.tag_list.join('; ') : '')
    survey_row << (@survey.concepts.count == 1 ? @survey.concepts.first.display_name : '')
    survey_row << (@survey.concepts.count == 1 ? @survey.concepts.first.value : '')
    survey_row << (@survey.concepts.count == 1 ? @survey.concepts.first.code_system : '')
    survey_row << tag_tab_name(@survey)
    survey_row << (@survey.created_at || '')
    survey_row << (@survey.created_by ? @survey.created_by.email : '')
    survey_row << (@survey.version_independent_id || '')
    survey_row << (@survey.version || '')
    survey_row << (@survey.status || '')
    survey_row << (@survey.control_number || '')
    survey_row << (@survey.surveillance_program ? @survey.surveillance_program.name : '')
    survey_row << (@survey.surveillance_system ? @survey.surveillance_system.name : '')
    survey_sheet.add_row survey_row
  end
  @wb.add_worksheet(name: 'Sections Metadata') do |section_sheet|
    section_sheet.add_row ['Section Name (R)','Section Description (O)','Section Keyword Tags (O)','Concept Name (C)','Concept Identifier (C)','Code System Identifier (C)','Code System Mappings Table (O)','Creation Date (I)','Author (I)','SDP-V ID (I)','Version (I)','Workflow Status (I)']
    @survey.survey_sections.each do |ss|
      add_section_to_sheet(ss.section, sheet, section_sheet)
    end
  end
end

questions = @survey.survey_sections.collect{|ss| ss.section.flatten_questions}.flatten
response_sets = questions.collect{|q| q.response_set}.compact.uniq{|rs| rs.name}
response_sets.each do |rs|
  @wb.add_worksheet(name: "RS #{rs.id.to_s}") do |sheet|
    sheet.add_row ['Response Set Name (R)','Response Set Description (O)','Display Name (R)','Response (R)','Code System Identifier (O)']
    rs.responses.each_with_index do |resp, index|
      sheet.add_row [rs.name,rs.description,resp.display_name,resp.value,resp.code_system] if index == 0
      sheet.add_row ['','',resp.display_name,resp.value,resp.code_system] unless index == 0
    end
  end
end

@tag_tables.each_with_index do |tag_array, index|
  add_tag_tab(tag_array, index)
end
