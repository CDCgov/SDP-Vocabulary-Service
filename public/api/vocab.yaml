 # http://editor.swagger.io/#/
swagger: '2.0'

info:
  version: "0.1.0"
  title: SDP Vocabulary Service
  description: Web API for the SDP Vocabulary shared service. A Fast Healthcare Interoperability Resources (FHIR) is available at the /api/fhir endpoint.
  contact:
    name: SDP Support
    url: http://www.cdc.gov/sdp/
    email: surveillanceplatform@cdc.gov

tags:
  -
    name: surveys
    description: Access to surveys
  -
    name: sections
    description: Access to sections
  -
    name: questions
    description: Access to questions
  -
    name: valueSets
    description: Access to value sets
  -
    name: programs
    description: Access to programs
  -
    name: systems
    description: Access to systems
  -
    name: FHIR
    description: Access to FHIR compliant API
  -
    name: metrics
    description: Access to SDP-V usage metrics

basePath: /api

paths:

  /metrics:
    get:
      tags:
      - metrics
      description: |
        Get a list of SDP-V usage metrics.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/metrics'

  /questions:
    get:
      tags:
      - questions
      description: |
        Get a list of questions that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned questions, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned questions to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'

  /questions/{id}:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of question (see details page), Format: Q-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of question
        required: false
        type: string
    get:
      tags:
      - questions
      description: |
        Get information about the question identified by `id` in the request
        URL. Information returned includes response sets associated with the
        question, these may be filtered using optional query parameters.
      produces:
      - application/json

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Question'

  /questions/{id}/usage:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of question (see details page), Format: Q-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of question
        required: false
        type: string
    get:
      tags:
      - questions
      description: |
        Get usage information about the question identified by `id` in the request
        URL.
      produces:
      - application/json

      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Usage'

  /programs:
    get:
      tags:
      - programs
      description: |
        Get a list of programs that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned programs, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned programs to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Program'

  /programs/{id}:
    parameters:
      -
        name: id
        in: path
        description: ID of program
        required: true
        type: string
    get:
      tags:
      - programs
      description: |
        Get information about a program.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Program'

  /systems:
    get:
      tags:
      - systems
      description: |
        Get a list of systems that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned systems, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned systems to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/System'

  /systems/{id}:
    parameters:
      -
        name: id
        in: path
        description: ID of System
        required: true
        type: string
    get:
      tags:
      - systems
      description: |
        Get information about a System.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/System'

  /surveys:
    get:
      tags:
      - surveys
      description: |
        Get a list of surveys that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned surveys, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned surveys to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Survey'

  /surveys/{id}:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of survey (see details page), Format: S-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of survey
        required: false
        type: string
    get:
      tags:
      - surveys
      description: |
        Get information about a Survey including its contained sections.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Survey'

  /sections:
    get:
      tags:
      - sections
      description: |
        Get a list of sections that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned sections, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned sections to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Section'

  /sections/{id}:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of section (see details page), Format: S-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of section
        required: false
        type: string
    get:
      tags:
      - sections
      description: |
        Get information about a section including the questions and associated
        response used by that section.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Section'

  /valueSets:
    get:
      tags:
      - valueSets
      description: |
        Get a list of value sets that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: oid
          in: query
          description: |
            Fetches a single value set by its OID. Overrides other params. If no matching value set with given oid will return resource not found. Note, only value sets imported from PHIN VADS can be queried by their OID in SDPV currently.
          required: false
          type: integer
        -
          name: limit
          in: query
          description: |
            Limits the number of returned value sets, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned value sets to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ValueSet'

  /valueSets/{id}:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of value set (see details page), Format: RS-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of value set
        required: false
        type: string
    get:
      tags:
      - valueSets
      description: |
        Get information about a value set.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ValueSet'

  /valueSets/{id}/usage:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of value set (see details page), Format: RS-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of value set
        required: false
        type: string
    get:
      tags:
      - valueSets
      description: |
        Get usage information about the value set identified by `id` in the request
        URL.
      produces:
      - application/json

      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Usage'

  /fhir/Questionnaire:
    get:
      tags:
      - FHIR
      description: |
        Get a list of FHIR formatted questionnaires (SDP-V Surveys).
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned Questionnaires, defaults to 100 if no
            `_content` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: _content
          in: query
          description:
            Limits the returned value sets to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Questionnaire'

  /fhir/Questionnaire/{id}:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of Questionnaire (see survey details page), Format: S-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of Questionnaire
        required: false
        type: string
    get:
      tags:
      - FHIR
      description: |
        Get information about a Questionnaire.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Questionnaire'

  /fhir/Valueset:
    get:
      tags:
      - FHIR
      description: |
        Get a list of value sets that match the supplied search criteria.
      produces:
      - application/json

      parameters:
        -
          name: limit
          in: query
          description: |
            Limits the number of returned value sets, defaults to 100 if no
            `search` parameter is supplied. Limit is bounded at 100 max records unless client accepts gzip encoding in the request header.
          required: false
          default: 100
          type: integer
        -
          name: search
          in: query
          description:
            Limits the returned value sets to those that contain the supplied
            text in their name, description or tags
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ValueSet'

  /fhir/Valueset/{id}:
    parameters:
      -
        name: id
        in: path
        description: "Version independent ID of value set (see response set details page), Format: RS-#"
        required: true
        type: string
      -
        name: version
        in: query
        description: Version of value set
        required: false
        type: string
    get:
      tags:
      - FHIR
      description: |
        Get information about a value set.
      produces:
      - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ValueSet'

definitions:
  ValueSet:
    type: object
    description: |
      A set of codes drawn from one or more code systems. This is a proper subset of the
      [FHIR ValueSet](http://hl7.org/fhir/2016Sep/valueset.html) structure.
    properties:
      url:
        type: string
        title: Globally unique identifier for the value set
      id:
        type: string
        title: Version independent identifier for the value set
      identifier:
        type: array
        title: Additional identifiers for the value set
        items:
          type: object
          title: Additional identifier for the value set
          properties:
            system:
              type: string
            value:
              type: string
      version:
        type: string
        title: Logical identifier for this version of the value set
      name:
        type: string
        title: informal name of the value set
      status:
        title: Status of the value set
        type: string
        enum:
          - draft
          - active
          - retired
      description:
        type: string
        title: Human readable description of the value set
      publisher:
        type: string
        title: The name of the individual or organization that published the value set
      expansion:
        type: object
        properties:
          identifier:
            type: string
            title: Uniquely identifies this expansion
          timestamp:
            type: string
            title: Time ValueSet expansion happened
          contains:
            type: array
            title: Codes in the value set
            items:
              type: object
              properties:
                system:
                  type: string
                  title: System value for the code
                version:
                  type: string
                  title: Version of the system in which this code/display is defined
                code:
                  type: string
                  title: Symbol in syntax defined by the system
                display:
                  type: string
                  title:
                    User display for the concept
      published_by:
        type: object
        title: User that published the value set
        $ref: '#/definitions/User'
      meta:
        type: object
        properties:
          singleWordTags:
            type: array
            items:
              type: string
              title: Single word tags added by the user for search discovery

  Usage:
    type: array
    description:
      A set of programs and sections that use a section, question or response
      value set.
    items:
      type: array
      items:
        type: object
        properties:
          programId:
            type: string
            title: Program identifier
          programName:
            type: string
            title: Human readable name of the program
          programUri:
            type: string
            title: Relative URI of program
          sections:
            type: array
            title: List of sections in which the question or response set is used
            items:
              type: object
              properties:
                sectionId:
                  type: string
                  title: Section identifier
                sectionName:
                  type: string
                  title: Human readable name of the section
                sectionUri:
                  type: string
                  title: Relative URI of the section

  CodeMapping:
    type: object
    description: A coded value
    properties:
      code:
        type: string
      codeSystem:
        type: string
      displayName:
        type: string

  CodedValue:
    type: object
    description: A coded value
    properties:
      code:
        type: string
      system:
        type: string
      display:
        type: string

  Question:
    type: object
    description:
      Details about a question managed by the service.
    properties:
      questionId:
        type: string
        title: Question identifier
      # do we need support for multiple languages here?
      questionText:
        type: string
        title: Human readable text of the question
      questionUri:
        type: string
        title: Relative URI of the question
      category:
        type: string
        title: Type of the question
      subcategory:
        type: string
        title: Sub-type of the question
      responseType:
        type: string
        title: Type of response
      version:
        type: string
        title: Logical identifier for this version of the question
      published_by:
        type: object
        title: User that published the question
        $ref: '#/definitions/User'
      tags:
        type: array
        items:
          $ref: '#/definitions/CodeMapping'
      singleWordTags:
        type: array
        items:
          type: string
          title: Single word tags added by the user for search discovery
      codeSytemMappings:
        type: array
        items:
          $ref: '#/definitions/CodeMapping'
      # TODO additional metadata

  Program:
    type: object
    description:
      Details about a program.
    properties:
      programId:
        type: string
        title: Program identifier
      programName:
        type: string
        title: Human readable name of the program
      programUri:
        type: string
        title: Relative URI of the program
      programDescription:
        type: string
        title: Human readable description of the program
      # TODO additional metadata
      sections:
        type: array
        description:
          Array of sections used by this program.
        items:
          $ref: '#/definitions/Section'

  System:
    type: object
    description:
      Details about a system.
    properties:
      systemid:
        type: string
        title: System identifier
      systemName:
        type: string
        title: Human readable name of the system
      systemUri:
        type: string
        title: Relative URI of the system
      systemDescription:
        type: string
        title: Human readable description of the system
        
  Survey:
    type: object
    description:
      Details about a survey.
    properties:
      programId:
        type: string
        title: Program identifier
      programName:
        type: string
        title: Human readable name of the program attributed to the survey
      programUri:
        type: string
        title: Relative URI of the program attributed to the survey
      systemId:
        type: string
        title: System identifier
      systemName:
        type: string
        title: Human readable name of the system attributed to the survey
      systemUri:
        type: string
        title: Relative URI of the system attributed to the survey
      surveyId:
        type: string
        title: Survey identifier
      surveyName:
        type: string
        title: Human readable name of the survey
      surveyUri:
        type: string
        title: Relative URI of the survey
      surveyDescription:
        type: string
        title: Human readable description of the survey
      published_by:
        title: User that published the survey
        $ref: '#/definitions/User'
      # TODO additional metadata
      sections:
        type: array
        description:
          Array of sections used by this program.
        items:
          $ref: '#/definitions/Section'
      tags:
        type: array
        items:
          $ref: '#/definitions/CodeMapping'
      singleWordTags:
        type: array
        items:
          type: string
          title: Single word tags added by the user for search discovery
      codeSytemMappings:
        type: array
        items:
          $ref: '#/definitions/CodeMapping'

  Section:
    type: object
    description:
      Details about a section.
    properties:
      sectionId:
        type: string
        title: Section identifier
      sectionName:
        type: string
        title: Human readable name of the section
      sectionUri:
        type: string
        title: Relative URI of the section
      version:
        type: string
        title: Logical identifier for this version of the section
      published_by:
        type: object
        title: User that published the section
        $ref: '#/definitions/User'
      tags:
        type: array
        items:
          $ref: '#/definitions/CodeMapping'
      singleWordTags:
        type: array
        items:
          type: string
          title: Single word tags added by the user for search discovery
      codeSytemMappings:
        type: array
        items:
          $ref: '#/definitions/CodeMapping'
      # TODO additional metadata
      nested_items:
        type: array
        description:
          Array of [question, response] pairs used in this section.
        items:
          type: object
          properties:
            question:
              $ref: '#/definitions/Question'
            response:
              $ref: '#/definitions/ValueSet'
            nested_section:
              $ref: '#/definitions/Section'
            program_var:
              type: string
              title: Program Defined Variable name

  Questionnaire:
    type: object
    description:
      FHIR specification compliant SDPV Survey as seen [in the questionnaire spec here.](http://www.hl7.org/implement/standards/fhir/questionnaire.html)
    properties:
      resourceType:
        type: string
        title: Questionnaire resource identifier
      url:
        type: string
        title: Globally unique identifier for the questionnaire
      id:
        type: string
        title: Version independent identifier for the questionnaire
      version:
        type: string
        title: Logical identifier for this version of the questionnaire
      name:
        type: string
        title: informal name of the questionnaire (human friendly)
      title:
        type: string
        title: name of the questionnaire (computer friendly)
      date:
        type: string
        title: datetime with date of last change
      status:
        title: Status of the questionnaire
        type: string
        enum:
          - draft
          - active
          - retired
      description:
        type: string
        title: Human readable description of the questionnaire
      publisher:
        type: string
        title: The name of the individual or organization that published the value set
      meta:
        type: object
        properties:
          tag:
            type: array
            items:
              $ref: '#/definitions/CodedValue'
      item:
        type: array
        items:
          $ref: '#/definitions/Item'

  Item:
    type: object
    description:
      Questions and sections within the Questionnaire
    properties:
      linkId:
        type: string
        title: Unique id for item in questionnaire
      text:
        type: string
        title: Primary text for this item
      type:
        type: string
        enum:
          - group
          - display
          - boolean
          - decimal
          - integer
          - date
          - dateTime
          - time
          - string
          - text
          - url
          - choice
          - open-choice
          - attachment
          - reference
          - quantity
      item:
        type: array
        items:
          $ref: '#/definitions/Item'
      extension:
        type: array
        items:
          $ref: '#/definitions/Extension'
      options:
        type: array
        items:
          $ref: '#/definitions/ValueSet'

  Extension:
    type: object
    description:
      (FHIR extension)[http://www.hl7.org/implement/standards/fhir/extensibility.html]
    properties:
      url:
        type: string
        title: identifies the meaning of the extension
      valueMeta:
        type: object
        title: A Meta heading from a resource
        properties:
          tag:
            type: array
            items:
              $ref: '#/definitions/CodedValue'

  User:
    type: object
    description:
      User of vocabulary service
    properties:
      id:
        type: string
        title: User ID
      email:
        type: string
        title: User's email address
      name:
        type: string
        title: User's full name
      first_name:
        type: string
        title: User's first name
      last_name:
        type: string
        title: User's last name
      last_program_id:
        type: string
        title: Last program associated with User
      last_system_id:
        type: string
        title: Last system associated with User
      publisher:
        type: boolean
        title: Whether user has publisher role
